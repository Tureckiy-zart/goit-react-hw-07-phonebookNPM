{"version":3,"sources":["components/PhoneBook/redux/actions/createAction.js","components/PhoneBook/redux/reducers/appReducer.js","components/PhoneBook/redux/store.js","components/PhoneBook/AddContact/InputForm.js","components/PhoneBook/Buttons/BntFormSubmit.js","components/api/api.js","components/PhoneBook/redux/operations/operations.js","components/PhoneBook/AddContact/AddContact.js","components/PhoneBook/Buttons/BntFormDelete.js","components/PhoneBook/Contacts/ContactListItem.js","components/PhoneBook/FilterContact/FilterContact.js","components/PhoneBook/Contacts/ContactList.js","components/PhoneBook/Contacts/Contacts.js","components/PhoneBook/App.js","index.js"],"names":["addContactRequest","createAction","addContactError","addContactSuccsess","delelteContact","filetrContact","getContact","onAddData","state","action","payload","addContact","createReducer","filter","item","id","loaderReducer","filterReducer","combineReducers","middleware","thunk","store","configureStore","reducer","reducers","InputForm","handleChange","config","name","placeholder","minLength","maxLength","type","value","style","width","onChange","BntFormSubmit","border","getAllContactsAPI","a","axios","get","data","addContactAPI","contact","post","delContactAPI","delete","disaptch","then","catch","error","AddContact","useState","stateName","setName","statePhone","setPhone","contacts","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","client","phone","every","client1","contactsVerification","operations","target","inputName","inputPhone","BntFormDelete","margin","height","onClick","ContactListItem","className","FilterContact","setfilter","filteredState","setfilteredContacts","contactArr","useEffect","length","toLowerCase","includes","filteredContacts","map","key","padding","display","flexDirection","alignItems","justifyContent","borderRadius","backgroundColor","ContactList","Contacts","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06325fc8.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n// import types from \"./actionTipes\";\r\n\r\nexport const addContactRequest = createAction(\"Contcat/addRequest\");\r\nexport const addContactError = createAction(\"Contcat/addError\");\r\n\r\nexport const addContactSuccsess = createAction(\"Contcat/addSuccsess\");\r\nexport const delelteContact = createAction(\"Contact/delelteSuccsess\");\r\nexport const filetrContact = createAction(\"Contact/filetrContact\");\r\n\r\nexport const getContact = createAction(\"Contact/getContact\");\r\n\r\n// export default { addContactRequest, addContactSuccsess, addContactError };\r\n\r\n// import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const increment = createAction('timer/increment');\r\n// console.log(increment(5)); // {type: \"timer/increment\", payload: 5}\r\n\r\n// export const addContact = (contact) => {\r\n//   return {\r\n//     type: types.ADD_CONTACT,\r\n//     payload: {\r\n//       contact,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const delComponent = (contacts, id) => {\r\n//   return {\r\n//     type: types.DELETE_CONTACT,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// export const onFilterContact = (filterContact) => {\r\n//   console.log(\"filterContact\", filterContact);\r\n//   return {\r\n//     type: types.FILTER_CONTACT,\r\n\r\n//     payload: filterContact,\r\n//   };\r\n// };\r\n// export const onClearArray = () => {\r\n//   return {\r\n//     type: types.CLEAR_ARRAY,\r\n//   };\r\n// };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccsess,\r\n  addContactError,\r\n  delelteContact,\r\n  filetrContact,\r\n  getContact,\r\n} from \"../actions/createAction\";\r\nconst onAddData = (state, action) => [...state, action.payload];\r\nconst onDelelteContact = (state, action) =>\r\n  state.filter((item) => item.id !== action.payload);\r\n\r\nconst onFiletrContact = (state, action) => action.payload;\r\nconst onGetContact = (state, action) => action.payload;\r\n\r\nconst addContact = createReducer([], {\r\n  [addContactSuccsess]: onAddData,\r\n  [addContactError]: onAddData,\r\n  [delelteContact]: onDelelteContact,\r\n  [getContact]: onGetContact,\r\n});\r\nconst loaderReducer = createReducer(false, { [addContactRequest]: () => true });\r\n\r\nconst filterReducer = createReducer(\"\", { [filetrContact]: onFiletrContact });\r\n\r\nexport default combineReducers({ addContact, filterReducer, loaderReducer });\r\n\r\n// {\r\n//   \"contacts\": [\r\n//     { \"id\": \"323423r\", \"name\": \"Rosie Simpson\", \"phone\": \"459-12-56\" },\r\n//     { \"id\": \"iwrwe2\", \"name\": \"Hermione Kline\", \"phone\": \"443-89-12\" },\r\n//     { \"id\": \"ir43d-3\", \"name\": \"Eden Clements\", \"phone\": \"645-17-79\" },\r\n//     { \"id\": \"idwer-4\", \"name\": \"Annie Copeland\", \"phone\": \"227-91-26\" }\r\n//   ]\r\n// }\r\n","import thunk from \"redux-thunk\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducers from \"./reducers/appReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = configureStore({\r\n  reducer: reducers,\r\n  middleware,\r\n  // composeWithDevTools(applyMiddleware(...middleware)),\r\n});\r\n// export const store = createStore(\r\n//   rootReducer,\r\n//   composeWithDevTools(applyMiddleware(...middleware))\r\n//   );\r\n","import React from \"react\";\r\n\r\nexport function InputForm({\r\n  handleChange,\r\n  config: { name, placeholder, minLength, maxLength, type },\r\n  value,\r\n}) {\r\n  return (\r\n    <>\r\n      <label>\r\n        {name}\r\n        <input\r\n          style={{ width: 280 }}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          type={type}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n \r\nexport const BntFormSubmit = () => (\r\n    <button style={{ width: 280, border: \"2px dotted white\" }} \r\n    type=\"submit\">Submit</button>  \r\n);\r\n    ","import axios from \"axios\";\r\n\r\nexport const getAllContactsAPI = async () => {\r\n  const { data } = await axios.get(\"http://localhost:4242/contacts\");\r\n  return data;\r\n};\r\n\r\nexport const addContactAPI = async (contact) => {\r\n  const { data } = await axios.post(\"http://localhost:4242/contacts\", contact);\r\n  return data;\r\n};\r\nexport const delContactAPI = async (id) => {\r\n  await axios.delete(`http://localhost:4242/contacts/${id}`);\r\n};\r\n","// import actions from \"../actions/actions\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccsess,\r\n  addContactError,\r\n  getContact,\r\n  delelteContact,\r\n} from \"../actions/createAction\";\r\nimport {\r\n  addContactAPI,\r\n  getAllContactsAPI,\r\n  delContactAPI,\r\n} from \"../../../api/api\";\r\n\r\nconst addContact = (contact) => (disaptch) => {\r\n  disaptch(addContactRequest());\r\n  addContactAPI(contact)\r\n    .then((item) => disaptch(addContactSuccsess(item)))\r\n    .catch((error) => disaptch(addContactError(error)));\r\n};\r\n\r\nconst getContacts = () => (disaptch) => {\r\n  getAllContactsAPI()\r\n    .then((data) => disaptch(getContact(data)))\r\n    .catch((error) => disaptch(addContactError(error)));\r\n};\r\n\r\nconst deleteContacts = (id) => (disaptch) => {\r\n  delContactAPI(id)\r\n    .then(() => disaptch(delelteContact(id)))\r\n    .catch((error) => disaptch(addContactError(error)));\r\n};\r\n\r\nexport default { addContact, getContacts, deleteContacts };\r\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport config from \"../config.json\";\nimport { InputForm } from \"./InputForm\";\nimport { BntFormSubmit } from \"../Buttons/BntFormSubmit\";\nimport operations from \"../redux/operations/operations\";\n\nconst AddContact = () => {\n  const [stateName, setName] = useState(\"\");\n  const [statePhone, setPhone] = useState(\"\");\n  const contacts = useSelector((state) => state.addContact);\n\n  const handleChangeName = ({ target: { value } }) => {\n    setName(value);\n  };\n  const handleChangePhone = ({ target: { value } }) => {\n    setPhone(value);\n  };\n  const contactsVerification = (contacts, client) => {\n    return contacts.every((client1) => {\n      if (client1.name !== client.name && client1.phone !== client.phone)\n        return true;\n    });\n  };\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const client = {\n      name: stateName,\n      phone: statePhone,\n    };\n    if (stateName !== \"\" && statePhone !== \"\") {\n      if (contactsVerification(contacts, client)) {\n        dispatch(operations.addContact(client));\n      }\n    }\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      style={{ width: 300, border: \"2px dotted white\" }}\n    >\n      <InputForm\n        handleChange={handleChangeName}\n        value={stateName}\n        config={config.inputName}\n      />\n      <InputForm\n        handleChange={handleChangePhone}\n        value={statePhone}\n        config={config.inputPhone}\n      />\n      <BntFormSubmit />\n    </form>\n  );\n};\n\nexport default AddContact;\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport operations from \"../redux/operations/operations\";\r\nconst BntFormDelete = ({ id }) => {\r\n\r\n  // const state = useSelector((state) => state.addContact);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <button\r\n      style={{ margin: 10, width: 50, height: 25, border: \"2px dotted white\" }}\r\n      onClick={() => dispatch(operations.deleteContacts(id))}\r\n    >\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\nexport default BntFormDelete;\r\n","import React from \"react\";\r\nimport BntFormDelete from \"../Buttons/BntFormDelete\";\r\nconst ContactListItem = ({ contact: { id, name, phone } }) => {\r\n  // console.log('idContactListItem', id)\r\n  return (\r\n    <p className=\"clientName\">\r\n      {name}: {phone}\r\n      <BntFormDelete id={id} />\r\n    </p>\r\n  );\r\n};\r\nexport default ContactListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ContactListItem from \"../Contacts/ContactListItem\";\r\n\r\nconst FilterContact = () => {\r\n  const [filter, setfilter] = useState(\"\");\r\n  const [filteredState, setfilteredContacts] = useState([]);\r\n  const contactArr = useSelector((state) => state.addContact);\r\n  // const state = useSelector((state) => state);\r\n  const filteredContacts = (contactArr, filter) =>\r\n    contactArr.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  useEffect(() => {\r\n    if (contactArr.length !== 0 && filter !== \"\") {\r\n      setfilteredContacts(filteredContacts(contactArr, filter));\r\n    }\r\n  }, [filter]);\r\n  const handleChangeFilter = ({ target: { value } }) => {\r\n    setfilter(value);\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        placeholder={\"Enter name to Saerch...\"}\r\n        value={filter}\r\n        onChange={handleChangeFilter}\r\n      />\r\n      {filteredState.length !== 0 &&\r\n        filter !== \"\" &&\r\n        filteredState.map((contact) => (\r\n          <div key={contact.id}>\r\n            <ContactListItem contact={contact} />\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\nexport default FilterContact;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport { useSelector } from \"react-redux\";\r\nconst style = {\r\n  padding: \"10px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  width: 280,\r\n  borderRadius: \"15%\",\r\n  border: \"2px dotted white\",\r\n  backgroundColor: \"black\",\r\n};\r\n\r\nconst ContactList = () => {\r\n  const contactArr = useSelector((state) => state.addContact);\r\n\r\n  return contactArr.map((contact) => (\r\n    <div className={style} key={contact.id}>\r\n      <ContactListItem contact={contact} />\r\n    </div>\r\n  ));\r\n};\r\nexport default ContactList;\r\n","import React, {  useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ContactList from \"./ContactList\";\r\nimport operations from \"../redux/operations/operations\";\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(operations.getContacts());\r\n  }, []);\r\n  // return 111;\r\n  return <ContactList />;\r\n};\r\nexport default Contacts;\r\n","import React from \"react\";\nimport AddContact from \"./AddContact/AddContact\";\n// import ContactList from \"./Form/AddContact\";\nimport FilterContact from \"./FilterContact/FilterContact\";\nimport Contacts from \"./Contacts/Contacts\";\nconsole.log(\"AddContact\", AddContact);\nconsole.log(\"FilterContactAPPPPPPPPP\", FilterContact);\nconst App = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      // alignItems: \"center\",\n      // justifyContent: \"center\",\n      width: 280,\n      border: \"2px dotted white\",\n      backgroundColor: \"black\",\n    }}\n  >\n    {/* { (FindedContact) ?  <FindedContact /> : <Contacts /> } */}\n    <AddContact />\n    <FilterContact />\n    <br />\n    <br />\n    <Contacts />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./components/PhoneBook/redux/store\";\nimport App from \"./components/PhoneBook/App\";\n// console.log('persistor', persistor.getState())\n// console.log('store.getState(', store.getState())\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}